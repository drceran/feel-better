stages:
  - test
  - build
  - deploy

variables:
  DOCKER_TLS_CERTDIR: "/certs"
  DATABASE_URL: "postgresql://example:test@db/therapy"
  SIGNING_KEY: "<your signing key here>"

# Run flake8 to check for code quality
lint-test-job:
  image: python:3.10-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8

services:
  - docker:dind

test:
  stage: test
  script:
    - docker-compose up -d
    - chmod +x ./wait-for-postgres.sh
    - ./wait-for-postgres.sh db python -m pytest
    - docker-compose down

build-therapy-service-image:
  stage: build
  image: docker:git
  variables:
    GITLAB_IMAGE: ${CI_REGISTRY_IMAGE}/therapy_image
  before_script:
    # $CI_JOB_TOKEN is variable automatically added by Gitlab: see https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference
    - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
  script:
    - docker build --tag $GITLAB_IMAGE:latest therapy
    - docker push $GITLAB_IMAGE:latest
  only:
    - main

# Build the React/JavaScript front-end
build-front-end-job:
  stage: build
  image: node:lts-bullseye
  needs:
    - lint-test-job
  variables:
    PUBLIC_URL: "https://team-feeling-good.gitlab.io/module3-project-gamma/"
    REACT_APP_SAMPLE_SERVICE_API_HOST: "https://feb-23-pt-13-therapy.mod3projects.com/"
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

# Deploy the React/JavaScript front-end to GitLab pages
pages:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public
